real: true # 是否使用真实机器人，default=false

only_arm: true  # 默认true, 是否只使用手臂数据, 目前的模仿学习只用于手臂数据
eef_type: qiangnao # 可选： qiangnao, leju_claw
control_mode: joint # or eef
which_arm: right  # 可选: left, right, both

ros_rate: 10  # 推理频率，单位Hz

# qiangnao_dof_needed是强脑手需要的自由度数目。强脑灵巧手有6个自由度。标准握拳状态[100] * 6, 张开状态[0] * 6。
# 1: 不需要精细操作或者多指协同操作时，通常为设置为1，表示只需要第一个关节作为开合依据,此时需要用[0, 100, 0, 0, 0, 0]表示张开状态, [100] * 6表示握拳状态。
# 2(暂未测试): 或者设置为2，目前的手柄遥操作只有两个自由度。0,2,3,4,5自由度绑定为1个自由度。
# 6(暂未测试): 如果脱离手柄使用手指灵巧操作，可以设置为6，表示需要所有6个自由度。
qiangnao_dof_needed: 1   # default=1

# leju_claw_dof_needed是夹爪需要的自由度数目。夹爪有1个自由度。仿真中，标准夹紧状态[0], 张开状态[-100]。
leju_claw_dof_needed: 1 # default=1

delta_action: false # 是否使用增量动作，default=false（暂未测试）

image_size: [3, 480, 848] # 图像大小，default=(3, 480, 640)

arm_init: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] # 手臂初始位置，default=0
# arm_min: [-180, -40, -90, -150, -90, -75, -40, -180, -40, -90, -150, -90, -75, -40] # 手臂最小角度
# arm_max: [90, 120, 90, 0, 90, 40, 40, 90, 120, 90, 0, 90, 40, 40] # 手臂最大角度

arm_min: [-180,-180,-180,-180,-180,-180,-180,-180,-180,-180,-180,-180,-180,-180]
arm_max: [180,180,180,180,180,180,180,180,180,180,180,180,180,180]

eef_min: [0] # 末端执行器最小角度
eef_max: [1] # 末端执行器最大角度

is_binary: false # 是否使用二值化夹爪，灵巧手，default=false